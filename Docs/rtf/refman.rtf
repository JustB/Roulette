{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment Roulette }Roulette}
{\comment Generato daDoxgyen. }
{\creatim \yr2011\mo2\dy11\hr23\min42\sec48}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sommario\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Roulette\par \pard\plain 
{\tc \v Roulette}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autori:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Giustino Borzacchiello, Antonio Cifariello, Francesco Paolo Cimmino\par
}{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Introduzione
\par}
{\tc\tcl2 \v Introduzione}
Questa \'E8 la pagina iniziale del progetto Roulette \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice delle strutture dati\par \pard\plain 
{\tc \v Indice delle strutture dati}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Strutture dati\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Queste sono le strutture dati con una loro breve descrizione:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b analisiDiSessionePuntata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b argomento} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b client_tag} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b node_tag} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b player} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b puntate_node} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b queue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sessioneDiGioco} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b sessioneDiPuntate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vincitore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indice dei file\par \pard\plain 
{\tc \v Indice dei file}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Elenco dei file\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Questo \'E8 un elenco dei file documentati con una loro breve descrizione:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b clientRoulette/{\b client_header.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include tutte le definizioni per il client della Roulette })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b common/{\b common_header.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include tutte le definizioni comuni al progetto })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b serverRoulette/{\b croupier.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione del routine per il thread croupier })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b serverRoulette/{\b player.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione del routine per il thread player e i suoi sotto-thread })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b serverRoulette/{\b queue.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione della struttura dati queue })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentazione delle classi{\tc \v Documentazione delle classi}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct analisiDiSessionePuntata\par \pard\plain 
{\tc\tcl2 \v analisiDiSessionePuntata}
{\xe \v analisiDiSessionePuntata}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b queue} {\b elencoVincitori}{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b numeroPerdenti}{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b numeroVincitori}{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b stato}{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_mutex_t {\b mutex}{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_cond_t {\b attesaMessaggi}{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analisi_puntata_t\par
Contiene l'analisi per una giocata fatta da tutti i giocatori connessi. Viene riazzerata ad ogni puntata.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i elencoVincitori} Lista contenente tutti i vincitori della sessione di puntate corrente \par
{\i numeroPerdenti} Numero di perdenti nella sessione di puntate corrente \par
{\i numeroVincitori} Numero di vincitori nella sessione di puntate corrente \par
{\i stato} Indica se il croupier ha analizzato la sessione di puntate. 0 se deve ancora analizzare la sessione, 1 se ha terminato l'analisi. \par
{\i mutex} Mutex associato alla sessione di analisi \par
{\i attesaMessaggi} Condition variable che indica l'attesa di un player per poter intraprendere la fase di scambio messaggi di congratulazioni \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct argomento\par \pard\plain 
{\tc\tcl2 \v argomento}
{\xe \v argomento}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
{\f2 #include <player.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b queue} * {\b listaPuntatePrivata}{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b clientFd}{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
argomento\par
argomento del gestore delle puntate nel server.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i listaPuntatePrivata} Contiene la lista di puntate temporanea ricevuta dal gestore \par
{\i clientFd} Il socket di comunicazione con il client associato al thread player \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
serverRoulette/{\b player.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct client_tag\par \pard\plain 
{\tc\tcl2 \v client_tag}
{\xe \v client_tag}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct sockaddr_in {\b clientData}{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b clientFd}{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
client_t\par
Contiene i dettagli di connessione per un singolo client connesso al server\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i clientData} porta e indirizzo del client \par
{\i clientFd} socket di comunicazione tra client e thread player \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct node_tag\par \pard\plain 
{\tc\tcl2 \v node_tag}
{\xe \v node_tag}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
{
{\f2 #include <queue.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct {\b node} * {\b next}{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b node_tag}\par
Un nodo di una lista. Rappresenta il caso base, ovvero un nodo contenente solo il puntatore al nodo successivo. Verr\'E0 utilizzato come "superclasse" per tutti gli altri tipi di nodo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al nodo successivo \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
serverRoulette/{\b queue.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct player\par \pard\plain 
{\tc\tcl2 \v player}
{\xe \v player}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct {\b node} * {\b next}{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b budgetPrecedente}{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b budgetAttuale}{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

char {\b nickname} [NICK_LENGTH]{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

in_port_t {\b portaMessaggiCongratulazioni}{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b client_t} * {\b datiConnessioneClient}{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b queue} {\b elencoPuntate}{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b vincitore}{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
player_t\par
Nodo della lista sessioneDiGioco::elencoGiocatori. Contiene i dettagli su un giocatore connesso al server {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al successivo nodo nella lista \par
{\i budgetPrecedente} Budget del giocatore prima dell'analisi della sessione di puntate da parte del croupier \par
{\i budgetAttuale} Budget reale del giocatore, modificato durante l'analisi della sessione di puntate da parte del croupier \par
{\i nickname} Nickname del giocatore \par
{\i portaMessaggiCongratulazioni} Porta sulla quale il client del giocatore \'E8 posto in ascolto per accettare i messaggi di congratulazione \par
{\i datiConnessioneClient} Contiene i dati di connessione del client, porta e indirizzo IP \par
{\i elencoPuntate} Lista contenente tutte le puntate del giocatore per la sessione corrente \par
{\i vincitore} Indica se il giocatore ha vinto la puntata corrente; 1 se ha vinto, 0 se ha perso \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct puntate_node\par \pard\plain 
{\tc\tcl2 \v puntate_node}
{\xe \v puntate_node}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct {\b node} * {\b next}{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b numeroPuntato}{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b tipoPuntata}{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b sommaPuntata}{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
puntata_t\par
Nodo della lista puntate. Contiene i dettagli della puntata. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al successivo nodo nella lista \par
{\i numeroPuntato} Se la puntata \'E8 di tipo numerico, contiene il numero puntato dal giocatore \par
{\i tipoPuntata} Contiene il tipo di puntata. Pu\'F2 assumere i valori:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
-1 -> Dispari;\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
-2 -> Pari;\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
>=0 <=36 -> Numero \par}
\par
{\i sommaPuntata} Somma puntata dal giocatore \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct queue\par \pard\plain 
{\tc\tcl2 \v queue}
{\xe \v queue}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\f2 #include <queue.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b node} * {\b head}{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b node} * {\b tail}{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queue\par
Struttura dati contenente due nodi. Uno rappresenter\'E0 la testa, l'altro la coda della lista.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i head} Testa della coda \par
{\i tail} Coda \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
serverRoulette/{\b queue.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct sessioneDiGioco\par \pard\plain 
{\tc\tcl2 \v sessioneDiGioco}
{\xe \v sessioneDiGioco}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b queue} {\b elencoGiocatori}{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_mutex_t {\b mutex}{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_cond_t {\b attesaRiempimentoListaPuntate}{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_cond_t {\b attesaAlmenoUnGiocatore}{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b giocatoriConnessi}{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b giocatoriChePuntano}{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sessione_gioco_t\par
Contiene le informazioni su una sessione di gioco della Roulette In ogni momento dell'esecuzione ne esiste una ed una sola istanza chiamata sessioneGiocoCorrente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i elencoGiocatori} Lista contenente tutti i giocatori connessi \par
{\i mutex} Mutex associato alla sessione di gioco \par
{\i attesaRiempimentoListaPuntate} Condition variable che indica l'attesa del croupier per il riempimento della lista puntate da parte dei player \par
{\i attesaAlmenoUnGiocatore} Condition variable che indica l'attesa da parte del croupier per la connessione di un numero minimo di giocatori \par
{\i giocatoriConnessi} Numero di giocatori connessi al server \par
{\i giocatoriChePuntano} Numero di giocatori che partecipano alla puntata corrente \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct sessioneDiPuntate\par \pard\plain 
{\tc\tcl2 \v sessioneDiPuntate}
{\xe \v sessioneDiPuntate}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_mutex_t {\b mutex}{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_cond_t {\b aperte}{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_cond_t {\b chiuse}{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

pthread_cond_t {\b attesaCroupier}{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b stato}{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sessione_puntate_t\par
Contiene le informazioni sullo stato delle puntate della sessione corrente. In ogni momento dell'esecuzione ne esiste una ed una sola istanza chiamata sessionePuntateCorrente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i mutex} Mutex associato alla sessione delle puntate \par
{\i aperte} Condition variable che indica l'attesa per l'apertura delle puntate \par
{\i chiuse} Condition variable che indica l'attesa per la chiusura delle puntate \par
{\i attesaCroupier} Condition variable utilizzata per simulare lo scadere del tempo \par
{\i stato} Informa sullo stato delle puntate. 1 significa puntate aperte, 0 significa puntate chiuse \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per la struct vincitore\par \pard\plain 
{\tc\tcl2 \v vincitore}
{\xe \v vincitore}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par
{
{\f2 #include <common_header.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campi\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct {\b node} * {\b next}{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b portaMessaggiCongratulazioni}{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct sockaddr_in {\b indirizzoIp}{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
vincitore_t\par
Elemento della lista vincitori. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al successivo nodo nella lista \par
{\i portaMessaggiCongratulazioni} Contiene la porta su cui il client associato \'E8 in ascolto per i messaggi di congratulazioni \par
{\i indirizzoIp} Contiene l'indirizzo del client associato \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentazione per questa struct \'E8 stata generata a partire dal seguente file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
common/{\b common_header.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentazione dei file{\tc \v Documentazione dei file}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file clientRoulette/client_header.h\par \pard\plain 
{\tc\tcl2 \v clientRoulette/client_header.h}
{\xe \v clientRoulette/client_header.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include tutte le definizioni per il client della Roulette. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b parse_bet} (char *puntataStr, int *sommaPuntata, int *tipoPuntata, int *numeroPuntato)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b tipoPuntataTestuale} (int tipo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include tutte le definizioni per il client della Roulette. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gruppo 7 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Gennaio 2011 \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni\par
\pard\plain 
{\xe \v parse_bet\:client_header.h}
{\xe \v client_header.h\:parse_bet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int parse_bet (char * {\i puntataStr}, int * {\i sommaPuntata}, int * {\i tipoPuntata}, int * {\i numeroPuntato})}
}\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
parse_bet\par
Analizza una puntata. Riconosce se \'E8 stata fatta una puntata di tipo Pari/Dispari oppure su un numero\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i puntataStr} L'input dell'utente da linea di comando. Deve essere uno di questi tre tipi:{
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
D:<X>;\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
P:<X>;\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
<X>:<Y> \par}
\par
{\i sommaPuntata} [out] Somma puntata dal giocatore \par
{\i tipoPuntata} [out] Tipo di puntata effettuata \par
{\i numeroPuntato} [out] Numero puntato dal giocatore \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}parse_bet\par
Analizza una puntata. Riconosce se \'E8 stata fatta una puntata di tipo Pari/Dispari oppure su un numero \par
}}
{\xe \v tipoPuntataTestuale\:client_header.h}
{\xe \v client_header.h\:tipoPuntataTestuale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* tipoPuntataTestuale (int {\i tipo})}
}\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tipoPuntataTestuale\par
Restituisce la stringa relativa al tipo di puntata\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i tipo} Pu\'F2 assumere i valori:{
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
-1 -> Dispari\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
-2 -> Pari\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
>=0 <=36 -> Numerico \par}
\par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid La stringa corrispondente al tipo di puntata \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file common/common_header.h\par \pard\plain 
{\tc\tcl2 \v common/common_header.h}
{\xe \v common/common_header.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include tutte le definizioni comuni al progetto. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <arpa/inet.h>}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <fcntl.h>}\par
{\f2 #include "../serverRoulette/player.h"}\par
{\f2 #include <pthread.h>}\par
{\f2 #include "../serverRoulette/queue.h"}\par
{\f2 #include <signal.h>}\par
{\f2 #include <sys/socket.h>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <wait.h>}\par
{\f2 #include "../serverRoulette/player.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Strutture dati\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b client_tag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sessioneDiPuntate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sessioneDiGioco}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b player}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b puntate_node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b vincitore}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b analisiDiSessionePuntata}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definizioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXBUF}\~ 4096\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_BUDGET}\~ 500\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NICK_LENGTH}\~ 100\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IP_ADDRESS_LENGTH}\~ 15\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ridefinizioni di tipo (typedef)\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b client_tag} {\b client_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b sessioneDiPuntate} {\b sessione_puntate_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b sessioneDiGioco} {\b sessione_gioco_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b player} {\b player_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b puntate_node} {\b puntata_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b vincitore} {\b vincitore_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b analisiDiSessionePuntata} {\b analisi_puntata_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b err_abort} (int code, char *text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b open_socket} (struct sockaddr_in self, short int server_port)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gestisci_puntata_numero} (int estratto, {\b puntata_t} *puntata, {\b player_t} *{\b player})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gestisci_puntata_pari} (int estratto, {\b puntata_t} *puntata, {\b player_t} *{\b player})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gestisci_puntata_dispari} (int estratto, {\b puntata_t} *puntata, {\b player_t} *{\b player})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aumenta_budget} (int moltiplicatore, {\b puntata_t} *puntata, {\b player_t} *{\b player})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct timespec {\b calcola_intervallo} (int intervallo)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Socket} (int domain, int type, int protocol)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Bind} (int sockfd, const struct sockaddr *addr, socklen_t addrlen)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Listen} (int sockfd, int backlog)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Accept} (int sockfd, struct sockaddr *addr, socklen_t *addrlen)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Connect} (int sockfd, const struct sockaddr *addr, socklen_t addrlen)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Close} (int fildes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b Malloc} (size_t size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_mutex_init} (pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_cond_init} (pthread_cond_t *cond, const pthread_condattr_t *attr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_create} (pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_cancel} (pthread_t thread)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_mutex_lock} (pthread_mutex_t *mutex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_mutex_unlock} (pthread_mutex_t *mutex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_cond_wait} (pthread_cond_t *cond, pthread_mutex_t *mutex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Pthread_cond_timedwait} (pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_cond_broadcast} (pthread_cond_t *cond)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Pthread_cond_signal} (pthread_cond_t *cond)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ssize_t {\b Write} (int fd, const void *buf, size_t count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ssize_t {\b Read} (int fd, void *buf, size_t count)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variabili\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sessione_gioco_t} {\b sessioneGiocoCorrente}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sessione_puntate_t} {\b sessionePuntateCorrente}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b analisi_puntata_t} {\b analisiSessionePuntata}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b messaggioPuntateAperte} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ssize_t {\b lenMessaggioPuntateAperte}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b messaggioPuntateChiuse} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ssize_t {\b lenMessaggioPuntateChiuse}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numeroMinimoGiocatori}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include tutte le definizioni comuni al progetto. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gruppo 7 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Gennaio 2011 \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle definizioni\par
\pard\plain 
{\xe \v IP_ADDRESS_LENGTH\:common_header.h}
{\xe \v common_header.h\:IP_ADDRESS_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IP_ADDRESS_LENGTH\~ 15}
}\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lunghezza di un indirizzo IP in formato ASCII \par
}}
{\xe \v MAX_BUDGET\:common_header.h}
{\xe \v common_header.h\:MAX_BUDGET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_BUDGET\~ 500}
}\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Massimo budget ammesso dal server //TODO integrarlo nella giocata \par
}}
{\xe \v MAXBUF\:common_header.h}
{\xe \v common_header.h\:MAXBUF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXBUF\~ 4096}
}\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Massima lunghezza di un buffer di testo \par
}}
{\xe \v NICK_LENGTH\:common_header.h}
{\xe \v common_header.h\:NICK_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NICK_LENGTH\~ 100}
}\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lunghezza massima di un nickname per un giocatore \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle ridefinizioni di tipo (typedef)\par
\pard\plain 
{\xe \v analisi_puntata_t\:common_header.h}
{\xe \v common_header.h\:analisi_puntata_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b analisiDiSessionePuntata}  {\b analisi_puntata_t}}
}\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analisi_puntata_t\par
Contiene l'analisi per una giocata fatta da tutti i giocatori connessi. Viene riazzerata ad ogni puntata.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i elencoVincitori} Lista contenente tutti i vincitori della sessione di puntate corrente \par
{\i numeroPerdenti} Numero di perdenti nella sessione di puntate corrente \par
{\i numeroVincitori} Numero di vincitori nella sessione di puntate corrente \par
{\i stato} Indica se il croupier ha analizzato la sessione di puntate. 0 se deve ancora analizzare la sessione, 1 se ha terminato l'analisi. \par
{\i mutex} Mutex associato alla sessione di analisi \par
{\i attesaMessaggi} Condition variable che indica l'attesa di un player per poter intraprendere la fase di scambio messaggi di congratulazioni \par
}
}}
{\xe \v client_t\:common_header.h}
{\xe \v common_header.h\:client_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b client_tag}  {\b client_t}}
}\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
client_t\par
Contiene i dettagli di connessione per un singolo client connesso al server\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i clientData} porta e indirizzo del client \par
{\i clientFd} socket di comunicazione tra client e thread player \par
}
}}
{\xe \v player_t\:common_header.h}
{\xe \v common_header.h\:player_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b player}  {\b player_t}}
}\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
player_t\par
Nodo della lista sessioneDiGioco::elencoGiocatori. Contiene i dettagli su un giocatore connesso al server {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al successivo nodo nella lista \par
{\i budgetPrecedente} Budget del giocatore prima dell'analisi della sessione di puntate da parte del croupier \par
{\i budgetAttuale} Budget reale del giocatore, modificato durante l'analisi della sessione di puntate da parte del croupier \par
{\i nickname} Nickname del giocatore \par
{\i portaMessaggiCongratulazioni} Porta sulla quale il client del giocatore \'E8 posto in ascolto per accettare i messaggi di congratulazione \par
{\i datiConnessioneClient} Contiene i dati di connessione del client, porta e indirizzo IP \par
{\i elencoPuntate} Lista contenente tutte le puntate del giocatore per la sessione corrente \par
{\i vincitore} Indica se il giocatore ha vinto la puntata corrente; 1 se ha vinto, 0 se ha perso \par
}
}}
{\xe \v puntata_t\:common_header.h}
{\xe \v common_header.h\:puntata_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b puntate_node}  {\b puntata_t}}
}\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
puntata_t\par
Nodo della lista puntate. Contiene i dettagli della puntata. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al successivo nodo nella lista \par
{\i numeroPuntato} Se la puntata \'E8 di tipo numerico, contiene il numero puntato dal giocatore \par
{\i tipoPuntata} Contiene il tipo di puntata. Pu\'F2 assumere i valori:{
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
-1 -> Dispari;\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
-2 -> Pari;\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
>=0 <=36 -> Numero \par}
\par
{\i sommaPuntata} Somma puntata dal giocatore \par
}
}}
{\xe \v sessione_gioco_t\:common_header.h}
{\xe \v common_header.h\:sessione_gioco_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b sessioneDiGioco}  {\b sessione_gioco_t}}
}\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sessione_gioco_t\par
Contiene le informazioni su una sessione di gioco della Roulette In ogni momento dell'esecuzione ne esiste una ed una sola istanza chiamata sessioneGiocoCorrente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i elencoGiocatori} Lista contenente tutti i giocatori connessi \par
{\i mutex} Mutex associato alla sessione di gioco \par
{\i attesaRiempimentoListaPuntate} Condition variable che indica l'attesa del croupier per il riempimento della lista puntate da parte dei player \par
{\i attesaAlmenoUnGiocatore} Condition variable che indica l'attesa da parte del croupier per la connessione di un numero minimo di giocatori \par
{\i giocatoriConnessi} Numero di giocatori connessi al server \par
{\i giocatoriChePuntano} Numero di giocatori che partecipano alla puntata corrente \par
}
}}
{\xe \v sessione_puntate_t\:common_header.h}
{\xe \v common_header.h\:sessione_puntate_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b sessioneDiPuntate}  {\b sessione_puntate_t}}
}\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sessione_puntate_t\par
Contiene le informazioni sullo stato delle puntate della sessione corrente. In ogni momento dell'esecuzione ne esiste una ed una sola istanza chiamata sessionePuntateCorrente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mutex} Mutex associato alla sessione delle puntate \par
{\i aperte} Condition variable che indica l'attesa per l'apertura delle puntate \par
{\i chiuse} Condition variable che indica l'attesa per la chiusura delle puntate \par
{\i attesaCroupier} Condition variable utilizzata per simulare lo scadere del tempo \par
{\i stato} Informa sullo stato delle puntate. 1 significa puntate aperte, 0 significa puntate chiuse \par
}
}}
{\xe \v vincitore_t\:common_header.h}
{\xe \v common_header.h\:vincitore_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b vincitore}  {\b vincitore_t}}
}\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
vincitore_t\par
Elemento della lista vincitori. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al successivo nodo nella lista \par
{\i portaMessaggiCongratulazioni} Contiene la porta su cui il client associato \'E8 in ascolto per i messaggi di congratulazioni \par
{\i indirizzoIp} Contiene l'indirizzo del client associato \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni\par
\pard\plain 
{\xe \v Accept\:common_header.h}
{\xe \v common_header.h\:Accept}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Accept (int {\i sockfd}, struct sockaddr * {\i addr}, socklen_t * {\i addrlen})}
}\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accept\par
Wrapper function per la system call accept. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sockfd} \par
{\i addr} \par
{\i addrlen} \par
}
}}
{\xe \v aumenta_budget\:common_header.h}
{\xe \v common_header.h\:aumenta_budget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aumenta_budget (int {\i moltiplicatore}, {\b puntata_t} * {\i puntata}, {\b player_t} * {\i player})}
}\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
aumenta_budget\par
Aumenta il budget del giocatore di un dato moltiplicatore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i moltiplicatore} Moltiplicatore del budget \par
{\i puntata} Puntata //TODO possibile passare un int invece di tutta la puntata \par
{\i player} //TODO possibile passare il budget invece del giocatore\par
}
Aumenta il budget del giocatore, dato un moltiplicatore {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i moltiplicatore} \par
{\i puntata} \par
{\i player} \par
}
}}
{\xe \v Bind\:common_header.h}
{\xe \v common_header.h\:Bind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Bind (int {\i sockfd}, const struct sockaddr * {\i addr}, socklen_t {\i addrlen})}
}\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bind\par
Wrapper function per la system call bind. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sockfd} \par
{\i addr} \par
{\i addrlen} \par
}
}}
{\xe \v calcola_intervallo\:common_header.h}
{\xe \v common_header.h\:calcola_intervallo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct timespec calcola_intervallo (int {\i intervallo}){\f2  [read]}}
}\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calcola l'intervallo di attesa del croupier {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i intervallo} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid la struttura timespec contenente il tempo di fine attesa \par
}}}
{\xe \v Close\:common_header.h}
{\xe \v common_header.h\:Close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Close (int {\i fildes})}
}\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Close\par
Wrapper function per la system call close. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i fildes} \par
}
}}
{\xe \v Connect\:common_header.h}
{\xe \v common_header.h\:Connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Connect (int {\i sockfd}, const struct sockaddr * {\i addr}, socklen_t {\i addrlen})}
}\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connect\par
Wrapper function per la system call connect. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sockfd} \par
{\i addr} \par
{\i addrlen} \par
}
}}
{\xe \v err_abort\:common_header.h}
{\xe \v common_header.h\:err_abort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void err_abort (int {\i code}, char * {\i text})}
}\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
err_abort\par
Stampa sullo standard error un messaggio contenente l'errore, il file che l'ha causato, la riga e la spiegazione.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i code} il codice d'errore (il valore di ritorno per le funzioni pthread, la variabile errno per le altre syscall) \par
{\i text} Una stringa che spiega l'errore\par
}
Stampa sullo standard error un messaggio contenente l'errore, il file che l'ha causato, la riga e la spiegazione.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i code} il codice d'errore (il valore di ritorno per le funzioni pthread, la variabile errno per le altre syscall) \par
{\i text} Una stringa che spiega l'errore \par
}
}}
{\xe \v gestisci_puntata_dispari\:common_header.h}
{\xe \v common_header.h\:gestisci_puntata_dispari}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void gestisci_puntata_dispari (int {\i estratto}, {\b puntata_t} * {\i puntata}, {\b player_t} * {\i player})}
}\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gestisci_puntata_dispari\par
Gestisce una puntata di tipo dispari, aumentando il budget del giocatore nel caso in cui sia vincente.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i estratto} Numero estratto nella sessione di gioco corrente \par
{\i puntata} Puntata effettuata dal giocatore \par
{\i player} Giocatore che ha effettuato la puntata\par
}
Controlla se una puntata del tipo D:<N> \'E8 vincente {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i estratto} \par
{\i puntata} \par
{\i player} \par
}
}}
{\xe \v gestisci_puntata_numero\:common_header.h}
{\xe \v common_header.h\:gestisci_puntata_numero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void gestisci_puntata_numero (int {\i estratto}, {\b puntata_t} * {\i puntata}, {\b player_t} * {\i player})}
}\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gestisci_puntata_numero\par
Gestisce una puntata di tipo numerico, aumentando il budget del giocatore nel caso in cui sia vincente.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i estratto} Numero estratto nella sessione di gioco corrente \par
{\i puntata} Puntata effettuata dal giocatore \par
{\i player} Giocatore che ha effettuato la puntata\par
}
Controlla se una puntata del tipo <N>:<M> \'E8 vincente {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i estratto} \par
{\i puntata} \par
{\i player} \par
}
}}
{\xe \v gestisci_puntata_pari\:common_header.h}
{\xe \v common_header.h\:gestisci_puntata_pari}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void gestisci_puntata_pari (int {\i estratto}, {\b puntata_t} * {\i puntata}, {\b player_t} * {\i player})}
}\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gestisci_puntata_pari\par
Gestisce una puntata di tipo pari, aumentando il budget del giocatore nel caso in cui sia vincente.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i estratto} Numero estratto nella sessione di gioco corrente \par
{\i puntata} Puntata effettuata dal giocatore \par
{\i player} Giocatore che ha effettuato la puntata\par
}
Controlla se una puntata del tipo P:<N> \'E8 vincente {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i estratto} \par
{\i puntata} \par
{\i player} \par
}
}}
{\xe \v Listen\:common_header.h}
{\xe \v common_header.h\:Listen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Listen (int {\i sockfd}, int {\i backlog})}
}\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Listen\par
Wrapper function per la system call listen. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i sockfd} \par
{\i addr} \par
{\i addrlen} \par
}
}}
{\xe \v Malloc\:common_header.h}
{\xe \v common_header.h\:Malloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* Malloc (size_t {\i size})}
}\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Malloc\par
Wrapper function per la system call malloc. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mutex} \par
{\i attr} \par
}
}}
{\xe \v open_socket\:common_header.h}
{\xe \v common_header.h\:open_socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int open_socket (struct sockaddr_in {\i self}, short int {\i server_port})}
}\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
open_socket\par
Apre un socket descriptor, gli assegna un nome e si mette in ascolto.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i self} struttura che conterr\'E0 le informazioni relative al server \par
{\i server_port} porta sulla quale mettere in ascolto il server\par
}
Apre un socket, e si mette in ascolto su di esso {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i self} \par
{\i server_port} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid il socket aperto \par
}}}
{\xe \v Pthread_cancel\:common_header.h}
{\xe \v common_header.h\:Pthread_cancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_cancel (pthread_t {\i thread})}
}\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_cancel\par
Wrapper function per la system call pthread_cancel. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i thread} \par
}
}}
{\xe \v Pthread_cond_broadcast\:common_header.h}
{\xe \v common_header.h\:Pthread_cond_broadcast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_cond_broadcast (pthread_cond_t * {\i cond})}
}\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phtread_cond_broadcast\par
Wrapper function per la system call pthread_cond_broadcast. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cond} \par
}
}}
{\xe \v Pthread_cond_init\:common_header.h}
{\xe \v common_header.h\:Pthread_cond_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_cond_init (pthread_cond_t * {\i cond}, const pthread_condattr_t * {\i attr})}
}\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_cond_init\par
Wrapper function per la system call pthread_cond_init. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cond} \par
{\i attr} \par
}
}}
{\xe \v Pthread_cond_signal\:common_header.h}
{\xe \v common_header.h\:Pthread_cond_signal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_cond_signal (pthread_cond_t * {\i cond})}
}\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_cond_signal\par
Wrapper function per la system call pthread_cond_signal. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cond} \par
}
}}
{\xe \v Pthread_cond_timedwait\:common_header.h}
{\xe \v common_header.h\:Pthread_cond_timedwait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Pthread_cond_timedwait (pthread_cond_t * {\i cond}, pthread_mutex_t * {\i mutex}, const struct timespec * {\i abstime})}
}\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_cond_timedwait\par
Wrapper function per la system call pthread_cond_timedwait. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cond} \par
}
}}
{\xe \v Pthread_cond_wait\:common_header.h}
{\xe \v common_header.h\:Pthread_cond_wait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_cond_wait (pthread_cond_t * {\i cond}, pthread_mutex_t * {\i mutex})}
}\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_cond_wait\par
Wrapper function per la system call pthread_cond_wait. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i cond} \par
{\i mutex} \par
}
}}
{\xe \v Pthread_create\:common_header.h}
{\xe \v common_header.h\:Pthread_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_create (pthread_t * {\i thread}, const pthread_attr_t * {\i attr}, void *(*)(void *) {\i start_routine}, void * {\i arg})}
}\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_create\par
Wrapper function per la system call pthread_create. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i thread} \par
}
}}
{\xe \v Pthread_mutex_init\:common_header.h}
{\xe \v common_header.h\:Pthread_mutex_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_mutex_init (pthread_mutex_t * {\i mutex}, const pthread_mutexattr_t * {\i attr})}
}\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_mutex_init\par
Wrapper function per la system call pthread_mutex_init. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i thread} \par
{\i attr} \par
{\i start_routine} \par
{\i arg} \par
}
}}
{\xe \v Pthread_mutex_lock\:common_header.h}
{\xe \v common_header.h\:Pthread_mutex_lock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_mutex_lock (pthread_mutex_t * {\i mutex})}
}\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_mutex_lock\par
Wrapper function per la system call pthread_mutex_lock. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mutex} \par
}
}}
{\xe \v Pthread_mutex_unlock\:common_header.h}
{\xe \v common_header.h\:Pthread_mutex_unlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Pthread_mutex_unlock (pthread_mutex_t * {\i mutex})}
}\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pthread_mutex_unlock\par
Wrapper function per la system call pthread_mutex_unlock. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i mutex} \par
}
}}
{\xe \v Read\:common_header.h}
{\xe \v common_header.h\:Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ssize_t Read (int {\i fd}, void * {\i buf}, size_t {\i count})}
}\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read\par
Wrapper function per la system call read. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i fd} \par
{\i buf} \par
{\i count} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Socket\:common_header.h}
{\xe \v common_header.h\:Socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket (int {\i domain}, int {\i type}, int {\i protocol})}
}\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Socket\par
Wrapper function per la system call socket. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i domain} \par
{\i type} \par
{\i protocol} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v Write\:common_header.h}
{\xe \v common_header.h\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ssize_t Write (int {\i fd}, const void * {\i buf}, size_t {\i count})}
}\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write\par
Wrapper function per la system call write. Termina il programma se si verifica un errore\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i fd} \par
{\i buf} \par
{\i count} \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle variabili\par
\pard\plain 
{\xe \v analisiSessionePuntata\:common_header.h}
{\xe \v common_header.h\:analisiSessionePuntata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b analisi_puntata_t} {\b analisiSessionePuntata}}
}\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
analisiSessionePuntata\par
Gestisce l'analisi della sessione di puntate corrente \par
}}
{\xe \v lenMessaggioPuntateAperte\:common_header.h}
{\xe \v common_header.h\:lenMessaggioPuntateAperte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ssize_t {\b lenMessaggioPuntateAperte}}
}\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
lenMessaggioPuntateAperte\par
Dimensione del messaggio di puntate aperte \par
}}
{\xe \v lenMessaggioPuntateChiuse\:common_header.h}
{\xe \v common_header.h\:lenMessaggioPuntateChiuse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ssize_t {\b lenMessaggioPuntateChiuse}}
}\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
lenMessaggioPuntateChiuse\par
Dimensione del messaggio di puntate chiuse \par
}}
{\xe \v messaggioPuntateAperte\:common_header.h}
{\xe \v common_header.h\:messaggioPuntateAperte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char {\b messaggioPuntateAperte}[]}
}\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
messaggioPuntateAperte\par
Messaggio che il thread player invia al client per indicare l'apertura delle puntate\par
Costanti \par
}}
{\xe \v messaggioPuntateChiuse\:common_header.h}
{\xe \v common_header.h\:messaggioPuntateChiuse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char {\b messaggioPuntateChiuse}[]}
}\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
messaggioPuntateChiuse\par
Messaggio che il thread player invia al client per indicare la chiusura delle puntate \par
}}
{\xe \v numeroMinimoGiocatori\:common_header.h}
{\xe \v common_header.h\:numeroMinimoGiocatori}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int {\b numeroMinimoGiocatori}}
}\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
numeroMinimoGiocatori\par
Numero minimo di giocatori connessi che il server attende per iniziare il gioco \par
}}
{\xe \v sessioneGiocoCorrente\:common_header.h}
{\xe \v common_header.h\:sessioneGiocoCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b sessione_gioco_t} {\b sessioneGiocoCorrente}}
}\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sessioneGiocoCorrente\par
Gestisce la sessione di gioco corrente \par
}}
{\xe \v sessionePuntateCorrente\:common_header.h}
{\xe \v common_header.h\:sessionePuntateCorrente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b sessione_puntate_t} {\b sessionePuntateCorrente}}
}\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sessionePuntateCorrente\par
Gestisce la sessione di puntate corrente \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file serverRoulette/croupier.h\par \pard\plain 
{\tc\tcl2 \v serverRoulette/croupier.h}
{\xe \v serverRoulette/croupier.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione del routine per il thread croupier. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b croupier} (void *arg)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione del routine per il thread croupier. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gruppo 7 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Gennaio 2011 \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni\par
\pard\plain 
{\xe \v croupier\:croupier.h}
{\xe \v croupier.h\:croupier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* croupier (void * {\i arg})}
}\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
croupier\par
Routine per il thread croupier {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i arg} Argomento del croupier thread. //TODO inserire cosa ci sta \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file serverRoulette/player.h\par \pard\plain 
{\tc\tcl2 \v serverRoulette/player.h}
{\xe \v serverRoulette/player.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione del routine per il thread player e i suoi sotto-thread. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "queue.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Strutture dati\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b argomento}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ridefinizioni di tipo (typedef)\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b argomento} {\b argomento_gestore_puntate_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b player} (void *arg)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b gestorePuntateGiocatore} (void *arg)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione del routine per il thread player e i suoi sotto-thread. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gruppo 7 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Gennaio 2011 \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle ridefinizioni di tipo (typedef)\par
\pard\plain 
{\xe \v argomento_gestore_puntate_t\:player.h}
{\xe \v player.h\:argomento_gestore_puntate_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b argomento}  {\b argomento_gestore_puntate_t}}
}\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
argomento\par
argomento del gestore delle puntate nel server.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i listaPuntatePrivata} Contiene la lista di puntate temporanea ricevuta dal gestore \par
{\i clientFd} Il socket di comunicazione con il client associato al thread player \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni\par
\pard\plain 
{\xe \v gestorePuntateGiocatore\:player.h}
{\xe \v player.h\:gestorePuntateGiocatore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* gestorePuntateGiocatore (void * {\i arg})}
}\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i arg} Argomento per il gestore di puntate. Di tipo argomento_gestore_puntate_t \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}}}
{\xe \v player\:player.h}
{\xe \v player.h\:player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* {\b player} (void * {\i arg})}
}\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
player\par
Routine per il thread player {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i arg} Argomento del player thread. //TODO inserire cosa ci sta \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}FUNZIONE player\par
============================================================================ \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Riferimenti per il file serverRoulette/queue.h\par \pard\plain 
{\tc\tcl2 \v serverRoulette/queue.h}
{\xe \v serverRoulette/queue.h}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione della struttura dati queue. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Strutture dati\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b node_tag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b queue}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ridefinizioni di tipo (typedef)\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b node_tag} {\b node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b queue} {\b queue}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funzioni\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b queue_init} ({\b queue} *myroot)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b queue_put} ({\b queue} *myroot, {\b node} *mynode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b node} * {\b queue_get} ({\b queue} *myroot)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrizione dettagliata\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include la definizione della struttura dati queue. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gruppo 7 \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Gennaio 2011 \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle ridefinizioni di tipo (typedef)\par
\pard\plain 
{\xe \v node\:queue.h}
{\xe \v queue.h\:node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b node_tag}  {\b node}}
}\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b node_tag}\par
Un nodo di una lista. Rappresenta il caso base, ovvero un nodo contenente solo il puntatore al nodo successivo. Verr\'E0 utilizzato come "superclasse" per tutti gli altri tipi di nodo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i next} Puntatore al nodo successivo \par
}
}}
{\xe \v queue\:queue.h}
{\xe \v queue.h\:queue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b queue}  {\b queue}}
}\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queue\par
Struttura dati contenente due nodi. Uno rappresenter\'E0 la testa, l'altro la coda della lista.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i head} Testa della coda \par
{\i tail} Coda \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentazione delle funzioni\par
\pard\plain 
{\xe \v queue_get\:queue.h}
{\xe \v queue.h\:queue_get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b node}* queue_get ({\b queue} * {\i myroot})}
}\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queue_get\par
Rimuove un nodo dalla coda {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i myroot} Coda da cui rimuovere il nodo \par
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Restituisce:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Puntatore al nodo rimosso \par
}}}
{\xe \v queue_init\:queue.h}
{\xe \v queue.h\:queue_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void queue_init ({\b queue} * {\i myroot})}
}\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queue_init\par
Inizializza testa e coda a NULL\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i myroot} queue da inizializzare\par
}
Queue init \par
}}
{\xe \v queue_put\:queue.h}
{\xe \v queue.h\:queue_put}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void queue_put ({\b queue} * {\i myroot}, {\b node} * {\i mynode})}
}\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
queue_put\par
Inserisce un nodo nella coda\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametri:\par}
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\i myroot} Coda a cui aggiungere il nodo \par
{\i mynode} Nodo da aggiungere \par
}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Indice\par 
\pard\plain 
{\tc \v Indice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}